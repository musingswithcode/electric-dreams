---
import type {DecorationItem} from 'shiki'
import {Code} from 'astro:components'

const {code, steps} = Astro.props
---

<div class="grid my-m">
  <Code
    class="grid__col-span-two-third"
    code={code.trim()}
    lang="js"
    theme="github-light"
    transformers={[
      {
        line(node, line) {
          for (let i = 0; i < steps.length; i++) {
            if (steps[i].lines?.includes(line)) {
              node.properties['data-step'] = i + 1
            }
          }
        },
        preprocess(code, options) {
          let decorations: DecorationItem[] = []

          const codeLines = code.split('\n')
          for (let i = 0; i < steps.length; i++) {
            const {lines, highlights} = steps[i]

            highlights?.forEach((highlight: string) => {
              lines?.forEach((line: number) => {
                const codeLine = codeLines[line - 1]

                const start = codeLine.indexOf(highlight)
                const end = start + highlight.length
                if (start == -1) return

                decorations.push({
                  start: {line: line - 1, character: start},
                  end: {line: line - 1, character: end},
                  properties: {class: 'highlighted-word'}
                })
              })
            })
          }
          options.decorations ||= []
          options.decorations.push(...decorations)
        }
      }
    ]}
  />

  <div class="grid__col-span-third prose--sm">
    <slot />
  </div>
</div>

<style is:global>
  .astro-code {
    padding-inline: 0;
  }

  .astro-code code {
    padding-inline: 0;
  }

  .astro-code .line {
    display: inline-block;
    width: 100%;
    padding-inline: 2rem;
    position: relative;
  }

  .astro-code .line[data-step]::before {
    content: ' ';
    position: absolute;
    left: 0;
    top: 0;
    bottom: 0;
    right: 0;
    background: rgba(var(--step-color), 0.1);
    border-inline-start: 5px solid rgb(var(--step-color));
    pointer-events: none;
  }

  .astro-code .line[data-step='1'] {
    --step-color: var(--color-step-1);
  }
  .astro-code .line[data-step='2'] {
    --step-color: var(--color-step-2);
  }
  .astro-code .line[data-step='3'] {
    --step-color: var(--color-step-3);
  }
  .astro-code .line[data-step='4'] {
    --step-color: var(--color-step-4);
  }
  .astro-code .line[data-step='5'] {
    --step-color: var(--color-step-5);
  }
  .astro-code .line[data-step='6'] {
    --step-color: var(--color-step-6);
  }

  .astro-code .highlighted-word {
    background: var(--color-highlight);
    padding: 0.1em 0.2em;
    border-radius: 4px;
  }
</style>
